/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.ufpr.sistemabanco.view.cliente;

import javax.swing.JTextField;
import org.ufpr.sistemabanco.model.Cliente;

/**
 *
 * @author Lia
 */
public class FormularioClienteView extends javax.swing.JPanel {

    /**
     * Creates new form FormularioCliente
     */
    public FormularioClienteView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nomeLabel = new javax.swing.JLabel();
        nomeCampo = new javax.swing.JTextField();
        sobrenomeLabel = new javax.swing.JLabel();
        sobrenomeCampo = new javax.swing.JTextField();
        rgLabel = new javax.swing.JLabel();
        rgCampo = new javax.swing.JTextField();
        cpfLabel = new javax.swing.JLabel();
        cpfCampo = new javax.swing.JTextField();
        enderecoLabel = new javax.swing.JLabel();
        enderecoCampo = new javax.swing.JTextField();
        salarioLabel = new javax.swing.JLabel();
        salarioCampo = new javax.swing.JTextField();

        jLabel1.setText("jLabel1");

        nomeLabel.setText("Nome:");

        sobrenomeLabel.setText("Sobrenome:");

        rgLabel.setText("RG:");

        cpfLabel.setText("CPF:");

        enderecoLabel.setText("Endereço:");

        salarioLabel.setText("Salário:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sobrenomeLabel)
                    .addComponent(nomeLabel)
                    .addComponent(rgLabel)
                    .addComponent(cpfLabel)
                    .addComponent(enderecoLabel)
                    .addComponent(salarioLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(salarioCampo, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(enderecoCampo, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                        .addComponent(cpfCampo)
                        .addComponent(rgCampo)
                        .addComponent(sobrenomeCampo)
                        .addComponent(nomeCampo)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeLabel)
                    .addComponent(nomeCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sobrenomeCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sobrenomeLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rgLabel)
                    .addComponent(rgCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cpfLabel)
                    .addComponent(cpfCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enderecoLabel)
                    .addComponent(enderecoCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salarioLabel)
                    .addComponent(salarioCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cpfCampo;
    private javax.swing.JLabel cpfLabel;
    private javax.swing.JTextField enderecoCampo;
    private javax.swing.JLabel enderecoLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField nomeCampo;
    private javax.swing.JLabel nomeLabel;
    private javax.swing.JTextField rgCampo;
    private javax.swing.JLabel rgLabel;
    private javax.swing.JTextField salarioCampo;
    private javax.swing.JLabel salarioLabel;
    private javax.swing.JTextField sobrenomeCampo;
    private javax.swing.JLabel sobrenomeLabel;
    // End of variables declaration//GEN-END:variables

    private Cliente clienteSelecionadoParaAtualizacao;
    private JanelaClienteView view;
    
    public JTextField getCpfCampo() {
        return cpfCampo;
    }

    public JTextField getEnderecoCampo() {
        return enderecoCampo;
    }

    public JTextField getNomeCampo() {
        return nomeCampo;
    }

    public JTextField getRgCampo() {
        return rgCampo;
    }

    public JTextField getSobrenomeCampo() {
        return sobrenomeCampo;
    }

    public JTextField getSalarioCampo() {
        return salarioCampo;
    }

    public void setView(JanelaClienteView view) {
        this.view = view;
    }
    

    public Cliente getClienteSelecionadoParaAtualizacao() {
        if (clienteSelecionadoParaAtualizacao==null) {
           return null;
        }
        
        clienteSelecionadoParaAtualizacao.setNome(nomeCampo.getText());
        clienteSelecionadoParaAtualizacao.setSobrenome(sobrenomeCampo.getText());
        clienteSelecionadoParaAtualizacao.setRg(rgCampo.getText());
        clienteSelecionadoParaAtualizacao.setCpf(cpfCampo.getText());
        clienteSelecionadoParaAtualizacao.setEndereco(enderecoCampo.getText());

        try{
            clienteSelecionadoParaAtualizacao.setSalario(Double.parseDouble(salarioCampo.getText().replace(",", ".")));
        }catch(NumberFormatException e){
            view.apresentaErro("Valor de salário inválido, são aceitos apenas valores numéricos.\nConta será atualizada com o salário 0.0");
            clienteSelecionadoParaAtualizacao.setSalario(0.0);
            return clienteSelecionadoParaAtualizacao;
        }
        
        return clienteSelecionadoParaAtualizacao;
    }

    void setCliente(Cliente cliente) {
        clienteSelecionadoParaAtualizacao = cliente;
              
        nomeCampo.setText(cliente.getNome());
        sobrenomeCampo.setText(cliente.getSobrenome());
        rgCampo.setText(cliente.getRg());
        cpfCampo.setText(cliente.getCpf());
        enderecoCampo.setText(cliente.getEndereco());
        salarioCampo.setText(String.valueOf(cliente.getSalario()));
    }


}
