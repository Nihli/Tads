/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.ufpr.sistemabanco.view.manipulaconta;

import java.util.List;
import javax.swing.JOptionPane;
import org.ufpr.sistemabanco.controller.ContaController;
import org.ufpr.sistemabanco.model.ContaCorrente;
import org.ufpr.sistemabanco.model.ContaI;
import org.ufpr.sistemabanco.model.ContaInvestimento;

/**
 *
 * @author Lia
 */
public class JanelaManipulaContaView extends javax.swing.JFrame {

    /**
     * Creates new form JanelaManipulaContaView
     */
    public JanelaManipulaContaView() {
        initComponents();
        
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buscaClienteView = new org.ufpr.sistemabanco.view.manipulaconta.BuscaClienteView();
        tabelaContaView = new org.ufpr.sistemabanco.view.manipulaconta.TabelaContaView();
        botoesOperacaoContaView = new org.ufpr.sistemabanco.view.manipulaconta.botoesOperacaoContaView();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabelaContaView, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(buscaClienteView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(botoesOperacaoContaView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(buscaClienteView, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabelaContaView, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botoesOperacaoContaView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   

    public void setController(ContaController controller) {
        botoesOperacaoContaView.setController(controller);
        buscaClienteView.setController(controller);
        
        botoesOperacaoContaView.setView(this);
    }

    public void initView() {
        java.awt.EventQueue.invokeLater(() -> this.setVisible(true));
        tabelaContaView.getTabelaConta().setModel(contaTableModel);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.ufpr.sistemabanco.view.manipulaconta.botoesOperacaoContaView botoesOperacaoContaView;
    private org.ufpr.sistemabanco.view.manipulaconta.BuscaClienteView buscaClienteView;
    private org.ufpr.sistemabanco.view.manipulaconta.TabelaContaView tabelaContaView;
    // End of variables declaration//GEN-END:variables

    private ContaTableModel contaTableModel = new ContaTableModel();
    private int linhaClicada = -1;
    
    public String getBusca() {
        return buscaClienteView.getBuscaCampo().getText();
    }

    public void mostrarListaContas(List<ContaI> listaContas) {
        contaTableModel.setListaConta(listaContas);
    }
    
    public ContaI getContaParaManipular(){
        linhaClicada = tabelaContaView.getTabelaConta().getSelectedRow();
        
        if (linhaClicada == -1){
            return null;
        }

        return contaTableModel.getConta(linhaClicada);
    }

    public int getLinhaClicada() {
        linhaClicada = tabelaContaView.getTabelaConta().getSelectedRow();
        return linhaClicada;
    }

    public Double getValorSacar() {
        try{
            return Double.parseDouble(botoesOperacaoContaView.getValorSacarCampo().getText().replace(",", "."));
        }catch(NumberFormatException e){
            apresentaErro("Erro ao sacar. Preencha o campo valor com valores numéricos.");
            return null;
        }catch(Exception ex){
                apresentaErro("Erro ao criar a conta.");
                ex.printStackTrace();
            return null;
        }
    }
    
    public Double getValorDepositar() {
        try{
            return Double.parseDouble(botoesOperacaoContaView.getValorDepositarCampo().getText().replace(",", "."));
        }catch(NumberFormatException e){
            apresentaErro("Erro ao depositar. Preencha o campo valor com valores numéricos.");
            return null;
        }catch(Exception ex){
                apresentaErro("Erro ao criar a conta.");
                ex.printStackTrace();
            return null;
        }
    }
    
    public void apresentaInfo(String info) {
        JOptionPane.showMessageDialog(null, info + "\n", "Informação", JOptionPane.INFORMATION_MESSAGE);
    }

    public void apresentaErro(String erro) {
        JOptionPane.showMessageDialog(null, erro + "\n", "Erro", JOptionPane.ERROR_MESSAGE);
    }

    public void limpaCampos() {
        botoesOperacaoContaView.getValorDepositarCampo().setText("");
        botoesOperacaoContaView.getValorSacarCampo().setText("");
    }

}
